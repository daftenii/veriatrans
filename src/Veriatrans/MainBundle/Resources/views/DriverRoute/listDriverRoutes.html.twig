{% extends '::base.html.twig' %}
{#{% block title %}Sharepay | {{ "settings"|trans }}{% endblock %}#}
{% block body %}
    <div class="row">&nbsp;
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <div class="box-name">
                        <i class="fa fa-table"></i>
                        <span>{{ 'DriverList'|trans}}</span>
                    </div>
                    <div class="box-icons">
                        <a class="a">
                            <i class="fa fa-edit edit-datatable"></i>
                        </a>
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="expand-link">
                            <i class="fa fa-expand"></i>
                        </a>
                    </div>
                    <div class="no-move"></div>
                </div>
                <div class="box-content">
                    <table class="table beauty-table table-hover editable" id="driverRoute">
                        <thead>
                        <tr>
                            <th>{{ 'Nr'|trans }}</th>
                            <th>{{ 'DriverID'|trans }}</th>
                            <th>{{ 'TruckID'|trans }}</th>
                            <th>{{ 'CurrentKm'|trans }}</th>
                            <th>{{ 'PastKm'|trans }}</th>
                            <th>{{ 'HighwayPaiment'|trans }}</th>
                            <th>{{ 'ContainerID'|trans }}</th>
                            <th>{{ 'LoadedWeight'|trans }}</th>
                            <th>{{ 'Data'|trans }}</th>
                            <th>{{ 'DestinationID'|trans }}</th>
                            <th>{{ 'OrderNumber'|trans }}</th>
                            <th>{{ 'ClientID'|trans }}</th>
                        </tr>
                        </thead>
                        <tbody>

                        {#
                        {% for Key,EachDriver in Drivers %}
                        <tr>
                            <td>{{ EachDriver.RegistrationNumber }}</td>
                            <td><input type="text" value="{{ EachDriver.Model }}"></td>
                            <td><input type="text" value="{{ EachDriver.VIN }}"></td>
                            <td><input type="text" value="{{ EachDriver.CreatedDate }}"></td>
                            <td><input type="text" value="{{ EachDriver.ITPDate }}"></td>
                            <td><input type="text" value="{{ EachDriver.LicenceDate }}"></td>
                            <td><input type="text" value="{{ EachDriver.RCADate }}"></td>
                            <td><input type="text" value="{{ EachDriver.TachographDate }}"></td>
                            <td><input type="text" value="{{ EachDriver.CMRDate }}"></td>
                        </tr>
                        {% endfor %}
#}
                        </tbody>
                    </table>
                    <input type="hidden" value="" name="InEditMode">
                    <input type="hidden" value="" name="SelectedValue">
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">
        UpdatePath                              = '{{ path('json_update_driver_route',{ 'id': '_id_' }) }}';
        RetrieveDriverRouteColumnsLengthPath    = '{{ path('json_retrieve_driver_route_columns_length') }}'
        DeletePath                              = '{{ path('json_delete_driver_route',{'id':'_id_'}) }}';
        CreatePath                              = '{{ path('json_create_driver_route') }}';
        RetrieveDriverRoute                     = '{{ path('json_list_driver_routes') }}';
        EditDatatable                           = $('i.edit-datatable').parent();
        EditMode                                = $('input[name="InEditMode"]');
        EditModeInput                           = {'position':'relative','width':'130px'};
        DataTableID                             = $('#driverRoute');
        RetrieveJoinData                        = '{{ path('json_retrieve_join_data',{'column':'_column_'}) }}';
        JoinParameters                          = { 'driverid':{'columns':['FirstName','LastName']},
                                                    'truckid':{'columns':['RegistrationNumber','Model']},
                                                    'containerid':{'columns':['Terminal','City','Street']},
                                                    'destinationid':{'columns':['CountryCode','City']},
                                                    'clientid':{'columns':['CompanyName']}
                                                  };
        ExcludeColumns                          = [0];
        $(function () {
            EditMode.val('');

            /*
             $('table.editable tbody td input').on('click',function(){
             setEditable('table.editable tbody',true,[0,2]);
             });
             */
            $("#driverRoute").dataTable({
                "bServerSide": true,
                "sAjaxSource": RetrieveDriverRoute,
                "bFilter": false,
                "scrollX": true,
                "order": [[ 0, "desc" ]],
                "language": {
                    "emptyTable":     "{{ "DatatableEmpty"|trans }}",
                    "info":           "{{ "DatatableInfo"|trans }}",
                    "infoEmpty":      "{{ "DatatableInfoEmpty"|trans }}",
                    "infoFiltered":   "{{ "DatatableInfoFiltered"|trans }}",
                    "infoPostFix":    "",
                    "thousands":      ",",
                    "lengthMenu":     "{{ "DatatableLengthMenu"|trans }}",

                    "loadingRecords": "{{ "DatatableLoadingRecords"|trans }}",
                    "processing":     "{{ "DatatableProcessing"|trans }}",
                    "search":         "{{ "DatatableSearch"|trans }}",
                    "zeroRecords":    "{{ "DatatableZeroRecords"|trans }}",
                    "paginate": {
                        "first":      "{{ "DatatableFirst"|trans }}",
                        "last":       "{{ "DatatableLast"|trans }}",
                        "next":       "{{ "DatatableNext"|trans }}",
                        "previous":   "{{ "DatatablePrvious"|trans }}"
                    },
                    "aria": {
                        "sortAscending":  "{{ "DatatableSortAscending"|trans }}",
                        "sortDescending": "{{ "DatatableSortDescending"|trans }}"
                    }
                },
                "aoColumns": [{
                    "mData":"id"
                },{
                    "mData":"driverID", "sWidth": EditModeInput.width
                },{
                    "mData":"truckID", "sWidth": EditModeInput.width
                },{
                    "mData":"currentKm", "sWidth": EditModeInput.width
                },{
                    "mData":"pastKm", "sWidth": EditModeInput.width
                },{
                    "mData":"highwayPaiment", "sWidth": EditModeInput.width
                },{
                    "mData":"containerID", "sWidth": EditModeInput.width
                },{
                    "mData":"loadedWeight", "sWidth": EditModeInput.width
                },{
                    "mData":"date", "sWidth": EditModeInput.width,
                    "mRender": function(data){
                        return convertTimestamp(data);
                    }
                },{
                    "mData":"destinationID", "sWidth": EditModeInput.width
                },{
                    "mData":"orderNumber", "sWidth": EditModeInput.width
                },{
                    "mData":"clientID", "sWidth": EditModeInput.width
                }],
                fnDrawCallback: function(object) {
                    var Table = 'table.editable';
                    var TableTbody = Table+' tbody';
                    var TableRows = $('tr',TableTbody).length+1;
                    var InEditMode = Boolean(EditMode.val());
                    var classHide = '';
                    if(!InEditMode){
                        classHide = 'hide';
                    }
                    var html = '<tr id="0" order="'+(TableRows-1)+'" class="'+classHide+'">'+
                            '<td>&nbsp;<i class="fa fa-save"></i></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '<td style="position:relative;"></td>'+
                            '</tr>';

                    $('table.editable tbody').append(html);
                    $('table.editable tbody tr').each(function( index ) {
                        var value = $(this).attr('id');
                        $(this).attr('id',parseInt(value)-1);
                    });
                    setEditable(TableTbody,ExcludeColumns);
//                    $(TableTbody+' .datatable-default-element-focused').focus();
                    $.ajax({
                        //mimeType: 'text/html; charset=utf-8', // ! Need set mimeType only when run from local file
                        url: RetrieveDriverRouteColumnsLengthPath,
                        type: 'GET',
                        success: function(data) {
                            $.each(object.aoColumns, function( index, value ) {
                                var column = value.mData.toLowerCase();
                                $('thead th:nth-child('+(index+1)+')', Table).attr('data-length',data[column]);
                                $('thead th:nth-child('+(index+1)+')', Table).attr('data-column-name',column);
                                createEditCell($(TableTbody),$('tr:last td:nth-child('+(index+1)+')',TableTbody),ExcludeColumns);
                                $('tr:last td:nth-child('+(index+1)+') input', TableTbody).attr('maxlength',data[column]);
                                var isDate = column.slice(-4) == 'date';
                                if(isDate){
                                    //'placeholder="DD-MM-YYYY" data-mask="date"'
                                    $('tr:last td:nth-child('+(index+1)+') input', TableTbody).attr('placeholder','DD-MM-YYYY');
                                    $('tr:last td:nth-child('+(index+1)+') input', TableTbody).attr('data-mask','date');
                                }
                            });
                            $("[data-mask='date']").mask("99-99-9999");
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        },
                        dataType: "json",
                        async: true
                    });

                    if(InEditMode){
                        createDeleteRow(TableTbody);
                    }
                },
                fnCreatedRow: function( nRow, aData, iDataIndex ) {
                    $(nRow).attr('id', parseInt(aData.id)+1);
                    $(nRow).attr('order', iDataIndex);
                }
            });
        })
    </script>
{% endblock javascripts %}